/**
 * Build script to inject environment variables into config.js
 */

const fs = require('fs');
const path = require('path');

// Read .env.local file
function loadEnvFile() {
  try {
    const envPath = path.join(process.cwd(), '.env.local');
    const envContent = fs.readFileSync(envPath, 'utf8');
    const env = {};
    
    envContent.split('\n').forEach(line => {
      const [key, ...valueParts] = line.split('=');
      if (key && valueParts.length > 0) {
        env[key.trim()] = valueParts.join('=').trim();
      }
    });
    
    return env;
  } catch (error) {
    console.warn('No .env.local file found, using environment variables');
    return process.env;
  }
}

// Generate config.js with environment variables
function generateConfig() {
  const env = loadEnvFile();
  const dalleApiKey = env.DALL_E_3_API_KEY || process.env.DALL_E_3_API_KEY;
  const gptImageApiKey = env.GPT_IMAGE_1_API_KEY || process.env.GPT_IMAGE_1_API_KEY;
  
  if (!dalleApiKey || !gptImageApiKey) {
    console.error('Missing API keys in .env.local:');
    if (!dalleApiKey) console.error('- DALL_E_3_API_KEY not found');
    if (!gptImageApiKey) console.error('- GPT_IMAGE_1_API_KEY not found');
    process.exit(1);
  }
  
  const configContent = `/**
 * Configuration file for Pointer
 * This file is automatically generated from environment variables
 * DO NOT EDIT MANUALLY - This file is generated by build-config.js
 */

export const config = {
  DALL_E_3_API_KEY: "${dalleApiKey}",
  GPT_IMAGE_1_API_KEY: "${gptImageApiKey}"
};

// Expose to global scope for compatibility
if (typeof window !== 'undefined') {
  window.POINTER_CONFIG = config;
}`;

  fs.writeFileSync('js/config.js', configContent);
  console.log('Config file generated successfully with both API keys');
}

generateConfig(); 